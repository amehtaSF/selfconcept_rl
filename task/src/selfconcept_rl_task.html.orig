<!DOCTYPE html>
<html>
  <head>
<<<<<<< HEAD
    <title>Personality algorithm training task</title>
=======
    <title>My experiment</title>
>>>>>>> 7f3112521c0baca59d14fc29ac286f223cbf18c7
    <script src="../lib/jspsych-6.3.1/jspsych.js"></script>
    <script src="../lib/jspsych-6.3.1/plugins/jspsych-html-keyboard-response.js"></script>
    <script src="../lib/jspsych-6.3.1/plugins/jspsych-image-keyboard-response.js"></script>
    <script src="../lib/jspsych-6.3.1/plugins/jspsych-survey-likert.js"></script>
    <script src="../lib/jspsych-6.3.1/plugins/jspsych-preload.js"></script>
    <link href="../lib/jspsych-6.3.1/css/jspsych.css" rel="stylesheet" type="text/css">
  </head>
  <body></body>

  <!-- Import var traits -->
  <script type="text/javascript" src="js/trait_words.js"></script> 

  <script>

    /* create timeline */
    var timeline = [];

    /* preload images */
    // var preload = {
    //   type: 'preload',
    //   images: ['img/blue.png', 'img/orange.png']
    // }
    // timeline.push(preload);

    /* define welcome message trial */
    var welcome = {
      type: "html-keyboard-response",
      stimulus: "Welcome to the experiment. Press any key to begin."
    };
    timeline.push(welcome);

    /* define instructions trial */
    var instructions = {
      type: "html-keyboard-response",
      stimulus: `In this experiment, you will do stuff.`,
      post_trial_gap: 200
    };
    timeline.push(instructions);


    var fixation = {
      type: 'html-keyboard-response',
      stimulus: '<div style="font-size:60px;">+</div>',
      choices: jsPsych.NO_KEYS,
      trial_duration: function(){
        return jsPsych.randomization.sampleWithoutReplacement([250, 500, 750, 1000, 1250, 1500, 1750, 2000], 1)[0];
      },
      data: {
        task: 'fixation'
      }
    }

    var numberLikertScale = [1,2,3,4,5,6,7];

    var selfEval = {
      type: "survey-likert",
      questions: [
      {prompt: function(){
        return "<h2>" + jsPsych.timelineVariable('word') + "</h2>How much do you think this word describes you on a scale of " + Math.min.apply(null, numberLikertScale) + " (not " + jsPsych.timelineVariable('word')+ " at all) to " + Math.max.apply(null, numberLikertScale) + " (extremely " + jsPsych.timelineVariable('word') + ")? ";
      }, 
<<<<<<< HEAD
      name: "selfEval",
=======
>>>>>>> 7f3112521c0baca59d14fc29ac286f223cbf18c7
      labels: numberLikertScale}
      ],
      word: jsPsych.timelineVariable('word'),
      save_trial_parameters: {
        word: true
      }
    }

<<<<<<< HEAD
    // declare global algoRating that changes with each trial
    var algoRating = jsPsych.randomization.sampleWithoutReplacement(numberLikertScale, 1);
    var algoEval = {
      type: "html-keyboard-response",
      stimulus: function(){
        return "The algorithm determined you are <br/><h2>" + algoRating + " out of " +  Math.max.apply(null, numberLikertScale) + " " + jsPsych.timelineVariable('word') + "</h2>";
      },
      algoRating: algoRating,
      post_trial_gap: 200,
      word: jsPsych.timelineVariable('word'),
      save_trial_parameters: {
        algoRating: true,
        stimulus: true,
        word: true
      },
      on_finish: function(){
        algoRating = jsPsych.randomization.sampleWithoutReplacement(numberLikertScale, 1);
=======

    var algoEval = {
      type: "html-keyboard-response",
      stimulus: function(){
        return "The algorithm determined you are <br/><h2>" + jsPsych.randomization.sampleWithoutReplacement(numberLikertScale, 1) + " out of " +  Math.max.apply(null, numberLikertScale) + " " + jsPsych.timelineVariable('word') + "</h2>";
      },
      post_trial_gap: 200,
      word: jsPsych.timelineVariable('word'),
      save_trial_parameters: {
        stimulus: true,
        word: true
>>>>>>> 7f3112521c0baca59d14fc29ac286f223cbf18c7
      }
    };

    var goodBadLikertScale = [
    "Very bad",
    "Moderately bad",
    "Slightly bad",
    "Neutral", 
    "Slightly good", 
    "Moderately good",
    "Very good"
    ];

    var selfFeeling = {
      type: "survey-likert",
      questions: [
      {prompt: function(){
        return "How do you feel about yourself?";
      }, 
      labels: goodBadLikertScale}
      ],
      word: jsPsych.timelineVariable('word'),
      save_trial_parameters: {
        word: true
      }
    }

    var algoFeeling = {
      type: "survey-likert",
      questions: [
      {prompt: function(){
        return "How do you feel about the algorithm?";
      }, 
      labels: goodBadLikertScale}
      ],
      word: jsPsych.timelineVariable('word'),
      save_trial_parameters: {
        word: true
      }
    }

    var test_procedure = {
<<<<<<< HEAD
      timeline: [selfEval, algoEval, selfFeeling],
=======
      timeline: [selfEval, algoEval, selfFeeling, algoFeeling],
>>>>>>> 7f3112521c0baca59d14fc29ac286f223cbf18c7
      timeline_variables: traits,
      repetitions: 1,
      randomize_order: true
    }
    timeline.push(test_procedure);


    /* define debrief */

    // var debrief_block = {
    //   type: "html-keyboard-response",
    //   stimulus: function() {

    //     var trials = jsPsych.data.get().filter({task: 'response'});
    //     var correct_trials = trials.filter({correct: true});
    //     var accuracy = Math.round(correct_trials.count() / trials.count() * 100);
    //     var rt = Math.round(correct_trials.select('rt').mean());

    //     return `<p>You responded correctly on ${accuracy}% of the trials.</p>
    //       <p>Your average response time was ${rt}ms.</p>
    //       <p>Press any key to complete the experiment. Thank you!</p>`;

    //   }
    // };
    // timeline.push(debrief_block);

    /* start the experiment */
    jsPsych.init({
      timeline: timeline,
      on_finish: function() {
        jsPsych.data.displayData();
      }
    });
  </script>
</html>